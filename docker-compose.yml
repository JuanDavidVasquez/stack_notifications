version: '3.8'

services:
  # Microservicio de Notificaciones
  notifications-service:
    build: .
    container_name: notifications_service
    restart: always
    ports:
      - "4001:4001"
    environment:
      NODE_ENV: production
      PORT: 4001
      DB_HOST: mysql
      DB_USER: admin
      DB_PASSWORD: 2025*notificacioneS
      DB_NAME: notifications_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
      - ./cert:/app/cert
    networks:
      - microservices

  # Base de datos MySQL para notificaciones
  mysql:
    image: mysql:latest
    container_name: notifications_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: notifications_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: 2025*notificacioneS
    ports:
      - "3307:3306"
    volumes:
      - mysql_notifications_data:/var/lib/mysql
    networks:
      - microservices

  # Redis para colas de trabajos
  redis:
    image: redis:7-alpine
    container_name: notifications_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microservices

  # Dashboard para monitorear las colas (Bull Dashboard)
  bull-dashboard:
    image: deadly0/bull-board
    container_name: notifications_dashboard
    restart: always
    ports:
      - "3001:3000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
    depends_on:
      - redis
    networks:
      - microservices

  # PhpMyAdmin para gesti√≥n de base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: notifications_phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: admin
      PMA_PASSWORD: secret
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - microservices

volumes:
  mysql_notifications_data:
  redis_data:

networks:
  microservices:
    driver: bridge
